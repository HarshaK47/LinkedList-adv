bool isPalindrome(ListNode* head) {
        int counter=0;
        ListNode* temp=head;
        while(temp!=NULL){
            temp=temp->next;
            counter++;
        }
        if(counter==1){
            return true;
        }
        if(counter==2){
            if(head->val == head->next->val){
                return true;
            }
            return false;
        }
        if(counter==3){
            if(head->val == head->next->next->val){
                return true;
            }
            return false;
        }
        
        int mark;
        if(counter%2==0){
           mark=counter/2 + 1;
            
        }
        else{
            mark=counter/2 + 2;
        }
            ListNode* t1=head;
            int cnt=1;
            while(t1!=NULL){
                t1=t1->next;
                cnt++;
                if(cnt==mark) break;
            }
            ListNode* dum=t1;
            ListNode* curr=t1;
            ListNode* prev=NULL;
            ListNode* next=NULL;
            
            while(curr!=NULL){
                next=curr->next;
                curr->next=prev;
                prev=curr;
                curr=next;
            }
            dum=prev;
            
            ListNode* h1=head;
            ListNode* h2=dum;
            while(h2!=NULL){
                if(h1->val == h2->val){
                    h1=h1->next;
                    h2=h2->next;
                }
                else{
                    return false;
                }
            }
            return true;
            
            
        
        
        
        
        
    }